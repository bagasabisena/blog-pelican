<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>abisena.me</title><link href="http://www.abisena.me/" rel="alternate"></link><link href="http://www.abisena.me/feeds/all.atom.xml" rel="self"></link><id>http://www.abisena.me/</id><updated>2015-01-30T00:00:00+01:00</updated><entry><title>Rumpy, a (Supposedly) Multiplatform Chat App</title><link href="http://www.abisena.me/rumpy-a-supposedly-multiplatform-chat-app.html" rel="alternate"></link><updated>2015-01-30T00:00:00+01:00</updated><author><name>Bagas Abisena Swastanto</name></author><id>tag:www.abisena.me,2015-01-30:rumpy-a-supposedly-multiplatform-chat-app.html</id><summary type="html">&lt;p&gt;Rumpy is a hobby project that I developed as an escape from a boring on-the-job training back in 2012. The name Rumpy was chosen from Indonesian word 'rumpi' which means chit-chat. It was my first programming project that I did while I was learning to code. I always wanted to know how to program, so it was the perfect time to start. &lt;/p&gt;
&lt;p&gt;2012 was a time where Blackberry and its Messenger app took reign in Indonesia. It got me thinking for some time, why don't we roll-out our own version of chat service? Why should we rely on others infrastructure and pay monthly cost to them? Those naive idealistic thoughts drove me to the idea of a multiplatform chat service for my first coding project, and so Rumpy was born.&lt;/p&gt;
&lt;p&gt;In order to make chat service, you need to develop three things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, of course the app. The idea is multiplatform, so, client application for Android and iOS are mandatory.&lt;/li&gt;
&lt;li&gt;Second, the server. It has to be able to pass message between users.&lt;/li&gt;
&lt;li&gt;Lastly, the protocol. The client and server have to talk with a mutual understanding.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It sounds simple in my head but when it comes to actual implementation, it is a whole different level. &lt;/p&gt;
&lt;p&gt;Building a good Android app alone is delicate enough especially when you are still scratching your head from learning data structure, OOP, design pattern, and so on while fixing the error on syntax. Then you have to design and develop the server which is far more complex than the app. &lt;/p&gt;
&lt;p&gt;At the end the project was, well.. unfinished. No, it is not worth &lt;a href="http://time.com/3477028/facebook-whatsapp-19-billion-dollar-deal/"&gt;$20 billion like WhatsApp&lt;/a&gt;. The app didn't even arrive at Google Play. But wait, wait! Don't leave my blog just yet. At least it is not for nothing, okay.&lt;/p&gt;
&lt;p&gt;Rumpy did work at some level. Through the android app I could send message back and forth (as long as the server is up). And it also had delivered and read receipt which was a big deal at the time. Don't believe me? I have the screenshots (and the code) below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/rumpy/splash.jpg" /&gt;
&lt;img alt="" src="/images/rumpy/screenshot2.png" /&gt;
&lt;img alt="" src="/images/rumpy/screenshot3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Then I took Rumpy to the national startup competition &lt;a href="https://www.techinasia.com/imulai-4-jakarta/"&gt;iMULAI 4.0&lt;/a&gt; with my friend &lt;a href="http://www.twitter.com/stanggasta"&gt;Mohammad Anggasta&lt;/a&gt;. We thought maybe the idea and the prototype was not bad. And turned out we got into the &lt;a href="https://twitter.com/IMULAI/status/205503584291397634"&gt;best 50 ideas&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;So, in the end, I gained so much from Rumpy. My TU Delft Professor always put this sentence at the cover of exam paper.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Make clear in your answer how you reach the final result; the road to the answer is very important.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Learning is not always about result. Process is also important. Rumpy not only given me the experience (and taught me the &lt;a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRY&lt;/a&gt; principle), but also the satisfaction you get when you do something meaningful.&lt;/p&gt;
&lt;p&gt;The take home message for myself: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Creating something is fun. So let's start making the idea into reality. The worst thing I can get from it is that I learn.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thank you for reading!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;BTW i have uploaded the source code to github. For those who interested feel free to check from links below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bagasabisena/RumpyServerWS"&gt;Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bagasabisena/RumpyClient"&gt;Android client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bagasabisena/Stanza"&gt;Protocol&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="android"></category><category term="java"></category><category term="programming"></category></entry><entry><title>Distribution of Indonesian Student in the Netherlands</title><link href="http://www.abisena.me/distribution-of-indonesian-student-in-the-netherlands.html" rel="alternate"></link><updated>2014-11-29T00:00:00+01:00</updated><author><name>Bagas Abisena Swastanto</name></author><id>tag:www.abisena.me,2014-11-29:distribution-of-indonesian-student-in-the-netherlands.html</id><summary type="html">&lt;p&gt;Well, wise man says that first blog post should be meaningful, so here I am. Below is a simple visualization built on &lt;a href="https://www.d3js.org"&gt;awesome D3.js&lt;/a&gt;. It shows the distribution of Indonesian student in cities of Netherlands in the year of 2013. Please note that I don't own the data. The data is made by PPI Belanda (Indonesian Student Union in the Netherlands). Big thanks to Arip Muttaqien for giving me the permission to use the data. Here goes! (Oh btw you can hover the cursor on the bubble and it will show you the real percentage and the universities where the students study).&lt;/p&gt;
&lt;style&gt;
    .place-label {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        font-size: 10px;
        fill: #444;
    }

    .place {
        fill: #444;
    }

    .d3-tip {
      line-height: 1;
      font-weight: bold;
      padding: 12px;
      background: rgba(250, 250, 250, 0.8);
      color: #000;
      border-radius: 2px;
      pointer-events: none;
    }

    /* Creates a small triangle extender for the tooltip */
    .d3-tip:after {
      box-sizing: border-box;
      display: inline;
      font-size: 10px;
      width: 100%;
      line-height: 1;
      color: rgba(250, 250, 250, 0.8);
      position: absolute;
      pointer-events: none;
    }

    /* Northward tooltips */
    .d3-tip.n:after {
      content: "\25BC";
      margin: -1px 0 0 0;
      top: 100%;
      left: 0;
      text-align: center;
    }

    /* Eastward tooltips */
    .d3-tip.e:after {
      content: "\25C0";
      margin: -4px 0 0 0;
      top: 50%;
      left: -8px;
    }

    /* Southward tooltips */
    .d3-tip.s:after {
      content: "\25B2";
      margin: 0 0 1px 0;
      top: -8px;
      left: 0;
      text-align: center;
    }

    /* Westward tooltips */
    .d3-tip.w:after {
      content: "\25B6";
      margin: -4px 0 0 -1px;
      top: 50%;
      left: 100%;
    }

&lt;/style&gt;

&lt;div id="example"&gt;&lt;/div&gt;

&lt;script src="/js/d3.min.js"&gt;&lt;/script&gt;

&lt;script src="/js/topojson.v1.min.js"&gt;&lt;/script&gt;

&lt;script src="/js/jquery-1.11.1.js"&gt;&lt;/script&gt;

&lt;script src="/js/bootstrap.min.js"&gt;&lt;/script&gt;

&lt;script src="/js/tip.js"&gt;&lt;/script&gt;

&lt;script src="/js/mustache.js"&gt;&lt;/script&gt;

&lt;script id="template" type="x-tmpl-mustache"&gt;
    &lt;div class="tip-container"&gt;
        &lt;p style="font-size:80%"&gt;{{name}}: {{percent}}%&lt;/p&gt;
        {{#uni_name}}
        &lt;p style="font-size: 60%"&gt;{{.}}&lt;/p&gt;
        {{/uni_name}}
    &lt;/div&gt;
&lt;/script&gt;

&lt;script&gt;

    var template = $('#template').html();
    Mustache.parse(template);

    var tip = d3.tip()
        .attr('class', 'd3-tip')
        .direction(function(d){
            if (d.name == 'Delft' || d.name == "Rotterdam" || d.name == "Tilburg") {
                return "sw"
            } else {
                return "ne"
            }
        })
        .html(function(d) {
            return Mustache.render(template, d);
        });

    var width = 960;
    var height = 780;

    var svg = d3.select('div#example').append('svg')
        .attr('width', width)
        .attr('height', height);

    svg.call(tip);

    var projection = d3.geo.mercator()
        .center([6.5,53.5])
        .scale(8500)
        .translate([width / 2, length / 3]);

    d3.json('/data/nld.json', function(err, nld) {
        if (err) return console.log(err);

        var subunits = topojson.feature(nld, nld.objects.subunits);

        var path = d3.geo.path()
            .projection(projection)
            .pointRadius(2);

        svg.append('path')
            .datum(subunits)
            .attr('d', path)
            .attr('fill', '#f0f0f0');

        d3.csv('/data/city.csv', function(error, data) {

            data.forEach(function(d){
                d.name = d.name;
                d.lat = +d.lat;
                d.long = +d.long;
                d.percent = +d.percent;
                d.uni_name = d.uni_name.split("|");
                d.uni_percent = d.uni_percent.split("|");
                for (var i = d.uni_name.length - 1; i &gt;= 0; i--) {
                    d.uni = {uni_name: d.uni_name, uni_percent: d.uni_percent};
                };
            })

            var color = d3.scale.category20();
            var radiusScale = d3.scale.linear()
                .domain(d3.extent(data, function(d){return d.percent}))
                .range([5,30])

            svg.append('g')
                .attr('class', 'places')
                .selectAll("circle")
                .data(data)
                .enter()
                .append('circle')
                    .attr('class','place')
                    .attr('cx',function(d){return projection([d.long, d.lat])[0]})
                    .attr('cy',function(d){return projection([d.long, d.lat])[1]})
                    .attr('r', function(d){return radiusScale(d.percent)})
                    .style('fill', function(d){return color(d.name);})
                    .on('mouseover', function(d){
                        var radius = radiusScale(d.percent);
                        d3.select(this)
                            .attr('r', radius)
                            .transition()
                            .duration(250)
                            .attr('r', 1.2*radius)

                        tip.show(d);
                            // .transition()
                            // .duration(500)
                            // .attr('r', radius)
                            // .transition()
                            // .duration(500)
                            // .attr('r', 1.5*radius)
                            // .transition()
                            // .duration(500)
                            // .attr('r', radius)
                    })
                    .on('mouseout', function(d){
                        var radius = radiusScale(d.percent);
                        d3.select(this)
                            .transition()
                            .duration(250)
                            .attr('r',radius)

                        tip.hide(d);
                    });

            svg.select('g.places')
                .selectAll('.place-label')
                .data(data)
                .enter()
                .append('text')
                    .attr("class", "place-label")
                    .attr("transform", function(d) {return "translate(" + projection([d.long, d.lat]) + ")"; })
                    .attr("dy", ".35em")
                    .attr('dx', '1.2em')
                    .text(function(d) { return d.name; });


        });



    });



&lt;/script&gt;</summary><category term="data visualization"></category><category term="d3.js"></category></entry></feed>